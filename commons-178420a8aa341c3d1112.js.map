{"version":3,"file":"commons-178420a8aa341c3d1112.js","mappings":"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","sources":["webpack://gatsby-starter-dogmatism/./src/themes/defaultTheme.ts","webpack://gatsby-starter-dogmatism/./src/layouts/default/Document.tsx","webpack://gatsby-starter-dogmatism/./src/layouts/default/Footer.tsx","webpack://gatsby-starter-dogmatism/./plugins/gatsby-plugin-i18n-l10n/src/utils/path.ts","webpack://gatsby-starter-dogmatism/./plugins/gatsby-plugin-i18n-l10n/src/components/LocalizedLink.tsx","webpack://gatsby-starter-dogmatism/./src/layouts/default/LanguageSelector.tsx","webpack://gatsby-starter-dogmatism/./src/layouts/default/MainNavigation.tsx","webpack://gatsby-starter-dogmatism/./src/layouts/default/Header.tsx","webpack://gatsby-starter-dogmatism/./src/layouts/default/Main.tsx","webpack://gatsby-starter-dogmatism/./src/layouts/DefaultLayout.tsx","webpack://gatsby-starter-dogmatism/./node_modules/react-intl/lib/src/components/message.js","webpack://gatsby-starter-dogmatism/./node_modules/react-intl/lib/src/components/useIntl.js"],"sourcesContent":["import { Theme } from '@emotion/react';\n\nexport const defaultTheme: Theme = {\n  primaryColor: '#539350',\n  secondaryColor: '#fa5100',\n  backgroundColor: '#ede9df',\n  blackColor: '#231f20',\n  whiteColor: '#ffffff',\n  darkerSibling: '10%',\n  brighterSibling: '10%',\n  breakpoints: {\n    tiny: '1280px',\n    small: '1440px',\n    medium: '1600px',\n    big: '1920px',\n    huge: '2560px',\n  },\n};\n","import { Helmet } from 'react-helmet';\n\ntype DocumentProps = {\n  title: string;\n};\n\nexport function Document({ title }: DocumentProps) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n}\n","import { css, Theme } from '@emotion/react';\n\nconst footerStyle = (theme: Theme) => css`\n  display: flex;\n  align-items: center;\n  height: 2rem;\n  background-color: ${theme.secondaryColor};\n`;\n\ntype FooterProps = {\n  author: string;\n  version: string;\n};\n\nexport function Footer({ author, version }: FooterProps) {\n  return (\n    <footer css={footerStyle}>\n      {author} {version}\n    </footer>\n  );\n}\n","import path from 'path';\nimport { PluginOptions } from '../../types';\n\nexport const trimRightSlash = (path: string) => {\n  return path === '/' ? path : path.replace(/\\/$/, '');\n};\n\nexport const trimSlashes = (path: string) => {\n  return path === '/' ? path : path.replace(/^\\/|\\/$/g, '');\n};\n\nexport const addLocalePrefix = (currentPath: string, locale: string, prefix: string, defaultLocale: string) => {\n  return locale !== defaultLocale ? trimRightSlash(`/${path.join(prefix, currentPath)}`) : currentPath;\n};\n\nexport const translatePagePaths = (path: string, options: PluginOptions) => {\n  return options.locales.map(locale => {\n    const trimmedPath = trimRightSlash(path);\n    const newPath = locale.slugs[trimmedPath] ?? trimmedPath;\n\n    return { locale: locale.locale, path: addLocalePrefix(newPath, locale.locale, locale.prefix, options.defaultLocale) };\n  });\n};\n\nexport const parsePathPrefix = (path: string, defaultPrefix: string) => {\n  if (path === '/') {\n    return defaultPrefix;\n  }\n\n  const splittedPath = path.match(/(?<=^\\/)\\w{2}(\\-\\w{2})?(?=\\/)/g);\n  return splittedPath && splittedPath[0] ? splittedPath[0] : defaultPrefix;\n};\n\nexport const generatePageContext = (path: string, options: PluginOptions) => {\n  const defaultPrefix = options.locales.find(l => l.locale === options.defaultLocale)?.prefix;\n  const parsedPrefix = parsePathPrefix(path, defaultPrefix ?? '');\n  const locale = options.locales.find(l => l.prefix === parsedPrefix);\n\n  return { locale: locale?.locale, prefix: locale?.prefix };\n};\n","import { Link } from 'gatsby';\nimport path from 'path';\nimport React, { useContext } from 'react';\nimport { useIntl } from 'react-intl';\nimport { trimRightSlash } from '../utils/path';\nimport { PageContext } from '../wrapPageElement';\n\ntype LocalizedLinkProps = React.PropsWithChildren<{\n  className?: string;\n  to: string;\n}>;\n\nexport default function LocalizedLink({ to, children, className }: LocalizedLinkProps) {\n  const pageContext = useContext(PageContext);\n  const prefix = pageContext.prefix ?? '';\n  const intl = useIntl();\n  const getSlug = () => (intl.messages[to] ? intl.formatMessage({ id: to }) : to);\n  const localizedPath = to !== '/' ? getSlug() : '/';\n  const prefixedPath = intl.defaultLocale === intl.locale ? localizedPath : trimRightSlash(path.join('/', prefix, localizedPath));\n  return (\n    <Link to={prefixedPath} className={className} activeClassName=\"active\" partiallyActive={true}>\n      {children}\n    </Link>\n  );\n}\n","import { css } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport { useContext } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { PageContext } from '../../wrapPageElement';\n\nconst languageSelectorStyles = css`\n  font-size: 1.4rem;\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n\n    li {\n      display: inline;\n      margin-left: 1rem;\n    }\n  }\n`;\n\nexport default function LanguageSelector() {\n  const pageContext = useContext(PageContext);\n\n  return (\n    <nav css={languageSelectorStyles}>\n      <ul>\n        {pageContext.translations?.map(p => (\n          <li key={p.locale}>\n            <Link to={p.path}>\n              <FormattedMessage id={`languages.${p.locale}`} />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n","import { css, Theme } from '@emotion/react';\nimport { LocalizedLink } from '../../../plugins/gatsby-plugin-i18n-l10n';\n\nconst navStyle = (theme: Theme) => css`\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    font-size: 1.4rem;\n  }\n`;\n\nexport default function MainNavigation() {\n  return (\n    <nav css={navStyle}>\n      <ul>\n        <li>\n          <LocalizedLink to=\"/pages\">Joho</LocalizedLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import { css, Theme } from '@emotion/react';\nimport { LocalizedLink } from '../../../plugins/gatsby-plugin-i18n-l10n';\nimport LanguageSelector from './LanguageSelector';\nimport MainNavigation from './MainNavigation';\n\nconst headerStyle = (theme: Theme) => css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 6rem;\n  font-size: 2rem;\n  font-weight: bold;\n  background-color: ${theme.secondaryColor};\n`;\n\ntype HeaderProps = {\n  title: string;\n};\n\nexport function Header({ title }: HeaderProps) {\n  return (\n    <header css={headerStyle}>\n      <LocalizedLink to=\"/\">{title}</LocalizedLink>\n      <MainNavigation />\n      <LanguageSelector />\n    </header>\n  );\n}\n","import { css, Theme } from '@emotion/react';\nimport { PropsWithChildren } from 'react';\n\nconst mainStyle = (theme: Theme) => css`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n`;\n\ntype MainProps = PropsWithChildren<{}>;\n\nexport function Main({ children }: MainProps) {\n  return <main css={mainStyle}>{children}</main>;\n}\n","import { css, Global, Theme, ThemeProvider } from '@emotion/react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { PropsWithChildren } from 'react';\nimport { DefaultLayoutQuery } from '../../graphql-types';\nimport { defaultTheme } from '../themes/defaultTheme';\nimport { Document } from './default/Document';\nimport { Footer } from './default/Footer';\nimport { Header } from './default/Header';\nimport { Main } from './default/Main';\n\nconst query = graphql`\n  query DefaultLayout {\n    site {\n      siteMetadata {\n        author\n        description\n        siteUrl\n        title\n        version\n        project\n      }\n    }\n  }\n`;\n\nconst globalStyles = (theme: Theme) => css`\n  html {\n    height: 100%;\n  }\n\n  body,\n  #___gatsby,\n  #gatsby-focus-wrapper,\n  main {\n    margin: 0;\n    font-size: 14px;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    min-height: 100%;\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  }\n\n  header,\n  main,\n  footer {\n    padding: 0 10%;\n\n    @media (max-width: ${theme.breakpoints.tiny}) {\n      padding: 0 1rem;\n    }\n  }\n`;\n\ntype DefaultLayoutProps = PropsWithChildren<{\n  theme?: Theme;\n}>;\n\nexport function DefaultLayout({ children, theme }: DefaultLayoutProps) {\n  const data = useStaticQuery<DefaultLayoutQuery>(query);\n\n  return (\n    <ThemeProvider theme={theme || defaultTheme}>\n      <Document title={data.site?.siteMetadata?.title || ''} />\n      <Global styles={globalStyles} />\n      <Header title={data.site?.siteMetadata?.title || ''} />\n      <Main>{children}</Main>\n      <Footer author={data.site?.siteMetadata?.project || ''} version={data.site?.siteMetadata?.version || ''} />\n    </ThemeProvider>\n  );\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\n\nfunction areEqual(prevProps, nextProps) {\n  var values = prevProps.values,\n      otherProps = __rest(prevProps, [\"values\"]);\n\n  var nextValues = nextProps.values,\n      nextOtherProps = __rest(nextProps, [\"values\"]);\n\n  return shallowEqual(nextValues, values) && shallowEqual(otherProps, nextOtherProps);\n}\n\nfunction FormattedMessage(props) {\n  var intl = useIntl();\n  var formatMessage = intl.formatMessage,\n      _a = intl.textComponent,\n      Text = _a === void 0 ? React.Fragment : _a;\n  var id = props.id,\n      description = props.description,\n      defaultMessage = props.defaultMessage,\n      values = props.values,\n      children = props.children,\n      _b = props.tagName,\n      Component = _b === void 0 ? Text : _b,\n      ignoreTag = props.ignoreTag;\n  var descriptor = {\n    id: id,\n    description: description,\n    defaultMessage: defaultMessage\n  };\n  var nodes = formatMessage(descriptor, values, {\n    ignoreTag: ignoreTag\n  });\n\n  if (typeof children === 'function') {\n    return children(Array.isArray(nodes) ? nodes : [nodes]);\n  }\n\n  if (Component) {\n    return React.createElement(Component, null, React.Children.toArray(nodes));\n  }\n\n  return React.createElement(React.Fragment, null, nodes);\n}\n\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n  var intl = React.useContext(Context);\n  invariantIntlContext(intl);\n  return intl;\n}"],"names":["defaultTheme","primaryColor","secondaryColor","backgroundColor","blackColor","whiteColor","darkerSibling","brighterSibling","breakpoints","tiny","small","medium","big","huge","Document","title","Helmet","footerStyle","theme","css","Footer","author","version","trimRightSlash","path","replace","LocalizedLink","to","children","className","prefix","useContext","PageContext","intl","useIntl","localizedPath","messages","formatMessage","id","prefixedPath","defaultLocale","locale","Link","activeClassName","partiallyActive","languageSelectorStyles","LanguageSelector","pageContext","translations","map","p","key","navStyle","MainNavigation","headerStyle","Header","mainStyle","Main","globalStyles","DefaultLayout","data","useStaticQuery","site","siteMetadata","styles","project","FormattedMessage","props","_a","textComponent","Text","description","defaultMessage","values","_b","tagName","Component","nodes","ignoreTag","Array","isArray","displayName","MemoizedFormattedMessage","prevProps","nextProps","otherProps","nextValues","nextOtherProps"],"sourceRoot":""}