---
import { ClientRouter } from "astro:transitions";
import { getFullLocale } from "../../utils/i18n";
import { resolvePath } from "astro-loader-i18n";
import { currentLocale } from "astro-nanostores-i18n:runtime";

type Props = {
  translations?: Record<string, string>;
};

const locale = currentLocale.get();
const { translations } = Astro.props;
let base = `${import.meta.env.SITE || ""}${import.meta.env.BASE_URL || ""}`;
base = base.endsWith("/") ? base : `${base}/`;
---

<head>
  <meta charset="utf-8" />
  <slot name="meta" />
  <meta name="viewport" content="width=device-width" />

  <link rel="alternate" hreflang="x-default" href={base} />
  <link rel="alternate" hreflang={getFullLocale(locale)} href={Astro.url.href} />
  <meta property="og:locale" content={getFullLocale(locale).replace(`-`, `_`)} />
  {
    Object.entries(translations || {})
      .filter(([l]) => l !== locale)
      .map(([locale, path]) => (
        <Fragment>
          <link rel="alternate" hreflang={getFullLocale(locale)} href={new URL(path, Astro.url).href} />
          <meta property="og:locale:alternate" content={getFullLocale(locale).replace(`-`, `_`)} />
        </Fragment>
      ))
  }
  <link rel="sitemap" href={resolvePath("sitemap-index.xml")} />
  <ClientRouter />
</head>
