---
import Sprite from "../../components/Sprite.astro";
import { resolvePath } from "../../utils/paths";
import { currentLocale } from "astro-nanostores-i18n:runtime";
import { C } from "../../site.config";
import LanguageSwitcher from "../../components/LanguageSwitcher.astro";

type Props = {
  translations?: Record<string, string>;
};

const { translations } = Astro.props;
const locale = currentLocale.get();
---

<style>
  div {
    position: sticky;
    top: 0;
    z-index: 100;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: var(--color-primary-90);
    height: 2rem;
  }

  div :global(a) {
    font-weight: 900;
    color: var(--color-background);
    text-decoration: none;
  }

  div :global(svg) {
    fill: var(--color-background);
    width: 2rem;
    transition:
      transform 0.2s,
      opacity 0.2s;
    transition-delay: 0.1s;
    opacity: 0;
    transform: translateY(-1rem);
  }

  div.show-brand :global(svg) {
    opacity: 1;
    transform: translateY(0);
  }

  div a span {
    transform: translateX(-2.5rem);
    transition: transform 0.2s;
  }

  div.show-brand a span {
    transform: translateX(0.5rem);
  }

  div :global(ul) {
    list-style: none;
    display: flex;
    margin: 0;
    padding: 0;
    white-space: nowrap;
  }

  div ul li:not(:last-of-type)::after {
    content: "/";
    margin: 0 0.8rem;
    color: var(--color-secondary);
    font-weight: bold;
  }

  div > a {
    display: flex;
    align-items: center;
    font-family: var(--fonts-heading);
    font-size: 0.8rem;
  }
</style>

<div id="ribbon">
  <a href={resolvePath(`${locale === C.DEFAULT_LOCALE ? "" : locale}`)}>
    <Sprite name="brand" />
    <span>{C.SETTINGS.META.TITLE}</span>
  </a>
  <nav>
    <ul>
      <li>
        <a href={`tel:${C.SETTINGS.META.PHONE.replaceAll(" ", "")}`}>{C.SETTINGS.META.PHONE}</a>
      </li>
      <li>
        <a href={`mailto:${C.SETTINGS.META.EMAIL}`}>{C.SETTINGS.META.EMAIL}</a>
      </li>
      <li>
        <LanguageSwitcher locale={locale} translations={translations} />
      </li>
    </ul>
  </nav>
</div>

<script>
  function register() {
    const ribbon = document.getElementById("ribbon");
    if (!ribbon) return;
    const header = document.querySelector("header");
    if (!header) return;

    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry?.isIntersecting) {
          ribbon.classList.remove("show-brand");
        } else {
          ribbon.classList.add("show-brand");
        }
      },
      { threshold: 0, rootMargin: `${-ribbon.clientHeight}px 0px 0px 0px` },
    );

    observer.observe(header);
  }

  register();
  document.addEventListener("astro:after-swap", register);
</script>
